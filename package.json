{
  "name": "n8n-monorepo",
  "version": "1.106.0",
  "private": true,
  "type": "module",
  "engines": {
    "node": ">=20.0.0 <23.0.0",
    "pnpm": ">=10.2.1"
  },
  "packageManager": "pnpm@10.12.1",
  "scripts": {
    "prepare": "node scripts/prepare.mjs",
    "preinstall": "node scripts/block-npm-install.js",
    "build": "turbo run build",
    "build:n8n": "node scripts/build-n8n.mjs",
    "build:deploy": "node scripts/build-n8n.mjs",
    "build:docker": "node scripts/build-n8n.mjs && node scripts/dockerize-n8n.mjs",
    "build:docker:scan": "node scripts/build-n8n.mjs && node scripts/dockerize-n8n.mjs && node scripts/scan-n8n-image.mjs",
    "build:docker:test": "node scripts/build-n8n.mjs && node scripts/dockerize-n8n.mjs && turbo run test:container:standard --filter=n8n-playwright",
    "typecheck": "turbo typecheck",
    "dev": "turbo run dev --parallel --env-mode=loose --filter=!@n8n/design-system --filter=!@n8n/chat --filter=!@n8n/task-runner",
    "dev:be": "turbo run dev --parallel --env-mode=loose --filter=!@n8n/design-system --filter=!@n8n/chat --filter=!@n8n/task-runner --filter=!n8n-editor-ui",
    "dev:safe": "turbo run build --filter=n8n-core --filter=@n8n/utils && pnpm --filter=n8n run start",
    "dev:build-only": "turbo run build --filter=!@n8n/design-system --filter=!@n8n/chat --filter=!@n8n/task-runner",
    "dev:ai": "turbo run dev --parallel --env-mode=loose --filter=@n8n/nodes-langchain --filter=n8n --filter=n8n-core",
    "dev:fe": "run-p start \"dev:fe:editor --filter=@n8n/design-system\"",
    "dev:fe:editor": "turbo run dev --parallel --env-mode=loose --filter=n8n-editor-ui",
    "dev:e2e": "cd cypress && pnpm run test:e2e:dev",
    "debug:flaky:e2e": "cd cypress && pnpm run test:flaky",
    "dev:e2e:server": "run-p start dev:fe:editor",
    "clean": "turbo run clean",
    "reset": "node scripts/ensure-zx.mjs && zx scripts/reset.mjs",
    "format": "turbo run format && node scripts/format.mjs",
    "format:check": "turbo run format:check",
    "lint": "turbo run lint",
    "lint:styles": "turbo run lint:styles",
    "lint:styles:fix": "turbo run lint:styles:fix",
    "lint:affected": "turbo run lint --affected",
    "lint:fix": "turbo run lint:fix",
    "lint:fast": "eslint --config eslint.config.js --cache --ext .js,.mjs,.cjs,.ts --max-warnings 0 .",
    "lint:perf": "ESLINT_NO_PROJECT_SERVICE=true eslint --config eslint.config.js --cache --no-eslintrc --ext .js,.mjs,.cjs .",
    "optimize-svg": "find ./packages -name '*.svg' ! -name 'pipedrive.svg' -print0 | xargs -0 -P16 -L20 npx svgo",
    "setup-backend-module": "node scripts/ensure-zx.mjs && zx scripts/backend-module/setup.mjs",
    "start": "run-script-os",
    "start:default": "cd packages/cli/bin && ./n8n",
    "start:tunnel": "./packages/cli/bin/n8n start --tunnel",
    "start:windows": "cd packages/cli/bin && n8n",
    "test": "JEST_JUNIT_CLASSNAME={filepath} turbo run test",
    "test:unit": "JEST_JUNIT_CLASSNAME={filepath} turbo run test:unit",
    "test:fast": "JEST_JUNIT_CLASSNAME={filepath} turbo run test:unit --parallel",
    "test:ci": "turbo run test --continue --concurrency=1",
    "test:affected": "turbo run test --affected --concurrency=1",
    "test:coverage": "COVERAGE_ENABLED=true JEST_JUNIT_CLASSNAME={filepath} turbo run test",
    "test:coverage:html": "COVERAGE_ENABLED=true JEST_JUNIT_CLASSNAME={filepath} turbo run test && echo 'Coverage reports generated in coverage/ directories of each package'",
    "coverage": "npm run test:coverage:html",
    "coverage:report": "node scripts/coverage-report.mjs",
    "coverage:open": "npm run test:coverage:html && node -e \"require('child_process').exec('open coverage-overview.html || xdg-open coverage-overview.html || start coverage-overview.html')\"",
    "perf:build": "node scripts/performance-build.mjs",
    "perf:build:typecheck": "node scripts/performance-build.mjs --typecheck",
    "perf:test": "node scripts/performance-test.mjs",
    "perf:test:coverage": "node scripts/performance-test.mjs --coverage",
    "perf:lint": "node scripts/performance-lint.mjs",
    "perf:lint:fix": "node scripts/performance-lint.mjs --fix",
    "perf:dashboard": "node scripts/performance-dashboard.mjs",
    "perf:analyze": "node scripts/performance-monitor.mjs analyze",
    "turbo:baseline": "node scripts/turbo-performance-monitor.js --baseline",
    "turbo:compare": "node scripts/turbo-performance-monitor.js --compare",
    "turbo:analyze": "node scripts/turbo-performance-monitor.js --analyze",
    "health:check": "node scripts/health-check.mjs",
    "health:check:save": "node scripts/health-check.mjs --save-results",
    "validate:build": "node scripts/build-validation.mjs",
    "validate:build:quick": "node scripts/build-validation.mjs --quick",
    "validate:build:skip-smoke": "node scripts/build-validation.mjs --skip-smoke-tests",
    "test:with:docker": "pnpm --filter=n8n-playwright test:container:standard",
    "test:show:report": "pnpm --filter=n8n-playwright exec playwright show-report",
    "watch": "turbo run watch",
    "webhook": "./packages/cli/bin/n8n webhook",
    "worker": "./packages/cli/bin/n8n worker"
  },
  "devDependencies": {
    "@biomejs/biome": "^1.9.0",
    "@n8n/eslint-config": "workspace:*",
    "@types/jest": "^29.5.3",
    "@types/node": "*",
    "@types/supertest": "^6.0.3",
    "babel-plugin-transform-import-meta": "^2.3.2",
    "bundlemon": "^3.1.0",
    "cross-env": "^7.0.3",
    "eslint": "catalog:",
    "jest": "^29.6.2",
    "jest-environment-jsdom": "^29.6.2",
    "jest-expect-message": "^1.1.3",
    "jest-junit": "^16.0.0",
    "jest-mock": "^29.6.2",
    "jest-mock-extended": "^3.0.4",
    "lefthook": "^1.7.15",
    "nock": "^14.0.1",
    "nodemon": "^3.0.1",
    "npm-run-all2": "^7.0.2",
    "p-limit": "^3.1.0",
    "rimraf": "^5.0.1",
    "run-script-os": "^1.0.7",
    "supertest": "^7.1.1",
    "ts-jest": "^29.1.1",
    "tsc-alias": "^1.8.10",
    "tsc-watch": "^6.2.0",
    "turbo": "2.5.4",
    "typescript": "*",
    "zx": "^8.1.4"
  },
  "pnpm": {
    "onlyBuiltDependencies": [
      "sqlite3"
    ],
    "overrides": {
      "@azure/identity": "^4.3.0",
      "@n8n/typeorm>@sentry/node": "catalog:",
      "@types/node": "^20.17.50",
      "@vue/compiler-sfc": "3.5.13",
      "chokidar": "^4.0.1",
      "esbuild": "^0.24.0",
      "multer": "^2.0.2",
      "prebuild-install": "7.1.3",
      "pug": "^3.0.3",
      "semver": "^7.5.4",
      "tar-fs": "2.1.3",
      "tslib": "^2.6.2",
      "tsconfig-paths": "^4.2.0",
      "typescript": "catalog:",
      "vue-tsc": "^2.2.8",
      "google-gax": "^4.3.7",
      "ws": ">=8.17.1",
      "brace-expansion@1": "1.1.12",
      "brace-expansion@2": "2.0.2",
      "date-fns": "2.30.0",
      "date-fns-tz": "2.0.0",
      "form-data": "4.0.4"
    },
    "patchedDependencies": {
      "bull@4.16.4": "patches/bull@4.16.4.patch",
      "pdfjs-dist@5.3.31": "patches/pdfjs-dist@5.3.31.patch",
      "pkce-challenge@5.0.0": "patches/pkce-challenge@5.0.0.patch",
      "@types/ws@8.18.1": "patches/@types__ws@8.18.1.patch",
      "@types/uuencode@0.0.3": "patches/@types__uuencode@0.0.3.patch",
      "element-plus@2.4.3": "patches/element-plus@2.4.3.patch",
      "js-base64": "patches/js-base64.patch",
      "ics": "patches/ics.patch",
      "minifaker": "patches/minifaker.patch",
      "z-vue-scan": "patches/z-vue-scan.patch",
      "@lezer/highlight": "patches/@lezer__highlight.patch",
      "v-code-diff": "patches/v-code-diff.patch"
    }
  },
  "dependencies": {
    "@fortawesome/fontawesome-svg-core": "^7.0.0",
    "@fortawesome/free-regular-svg-icons": "^7.0.0",
    "@fortawesome/free-solid-svg-icons": "^7.0.0",
    "@fortawesome/vue-fontawesome": "^3.0.3"
  }
}

<% require "dotenv"; Dotenv.load(".env.deploy") %>
service: n8n

image: <%= ENV["IMAGE_NAME"] %>

servers:
  web:
    - <%= ENV["WEB_SERVER_HOST"] %>

proxy:
  ssl: true
  forward_headers: true
  hosts:
    - <%= ENV["PROXY_HOST"] %>
  app_port: <%= ENV["N8N_PORT"] %>
  healthcheck:
    path: /

registry:
  server: <%= ENV["REGISTRY_SERVER"] %>
  username: <%= ENV["REGISTRY_USERNAME"] %>
  password:
    - REGISTRY_PASSWORD

builder:
  arch: amd64
  dockerfile: Dockerfile
  args:
    N8N_VERSION: <%= ENV["N8N_VERSION"] %>
    TARGETPLATFORM: <%= ENV["N8N_PLATFORM"] %>
    N8N_RELEASE_TYPE: <%= ENV["N8N_RELEASE_TYPE"] %>

env:
  clear:
    N8N_HOST: <%= ENV["PROXY_HOST"] %>
    N8N_EDITOR_BASE_URL: https://<%= ENV["PROXY_HOST"] %>
    WEBHOOK_URL: https://<%= ENV["PROXY_HOST"] %>
    N8N_PROTOCOL: <%= ENV["N8N_PROTOCOL"] %>
    N8N_PORT: <%= ENV["N8N_PORT"] %>
    NODE_ENV: production
    GENERIC_TIMEZONE: America/Araguaina
    TZ: America/Araguaina

    N8N_ENCRYPTION_KEY: <%= ENV["N8N_ENCRYPTION_KEY"] %>

    DB_TYPE: postgresdb
    DB_POSTGRESDB_DATABASE: <%= ENV["POSTGRES_DATABASE"] %>
    DB_POSTGRESDB_HOST: <%= ENV["POSTGRES_HOST"] %>
    DB_POSTGRESDB_PORT: <%= ENV["POSTGRES_PORT"] %>
    DB_POSTGRESDB_USER: <%= ENV["POSTGRES_USERNAME"] %>
    DB_POSTGRESDB_PASSWORD: <%= ENV["POSTGRES_PASSWORD"] %>
    DB_POSTGRESDB_POOL_SIZE: 5
    DB_POSTGRESDB_SSL_REJECT_UNAUTHORIZED: 'true'

    #EXECUTIONS_MODE: queue # enable workers mode (need another instance)
    QUEUE_BULL_REDIS_HOST: <%= ENV["REDIS_HOST"] %>
    QUEUE_BULL_REDIS_DB: 5
    EXECUTIONS_DATA_SAVE_ON_ERROR: 'all'
    EXECUTIONS_DATA_SAVE_ON_SUCCESS: 'all'

    N8N_EXTERNAL_STORAGE_S3_ACCESS_KEY: <%= ENV["STORAGE_ACCESS_KEY_ID"] %>
    N8N_EXTERNAL_STORAGE_S3_ACCESS_SECRET: <%= ENV["STORAGE_SECRET_ACCESS_KEY"] %>
    N8N_EXTERNAL_STORAGE_S3_BUCKET_NAME: <%= ENV["STORAGE_BUCKET_NAME"] %>
    N8N_EXTERNAL_STORAGE_S3_HOST: <%= ENV["STORAGE_ENDPOINT"] %>

    N8N_DIAGNOSTICS_ENABLED: <%= ENV["N8N_DIAGNOSTICS_ENABLED"] %>
    N8N_VERSION_NOTIFICATIONS_ENABLED: <%= ENV["N8N_VERSION_NOTIFICATIONS_ENABLED"] %>
    N8N_TEMPLATES_ENABLED: <%= ENV["N8N_TEMPLATES_ENABLED"] %>
    N8N_LICENSE_SERVER_URL: <%= ENV["N8N_LICENSE_SERVER_URL"] %>
    N8N_LICENSE_TENANT_ID: <%= ENV["N8N_LICENSE_TENANT_ID"] %>
    N8N_REINSTALL_MISSING_PACKAGES: <%= ENV["N8N_REINSTALL_MISSING_PACKAGES"] %>
    N8N_COMMUNITY_PACKAGES_ENABLED: <%= ENV["N8N_COMMUNITY_PACKAGES_ENABLED"] %>

    N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: true
    N8N_RUNNERS_ENABLED: true
    OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS: true

aliases:
  console: app exec --interactive --reuse "bin/rails console"
  shell: app exec --interactive --reuse "sh"
  logs: app logs -f
  logs-sidekiq: app logs -f --container=sidekiq
  dbc: app exec --interactive --reuse "bin/rails dbconsole"

accessories:
  postgres:
    image: pgvector/pgvector:pg16
    host: <%= ENV["SERVER_POSTGRES"] %>
    port: 5432
    env:
      clear:
        POSTGRES_USER: <%= ENV["POSTGRES_USERNAME"] %>
        POSTGRES_PASSWORD: <%= ENV["POSTGRES_PASSWORD"] %>
        POSTGRES_DB: <%= ENV["POSTGRES_DB"] %>
        PGPASSWORD: <%= ENV["PGPASSWORD"] %>
    directories:
      - /mnt/volume-hel1-1/postgres:/var/lib/postgresql/data
    options:
      restart: always

  redis:
    image: redis:alpine
    host: <%= ENV["SERVER_REDIS"] %>
    port: 6379
    cmd: redis-server
    directories:
      - /mnt/volume-hel1-1/redis:/data
    options:
      restart: always

  db_backup:
    image: itbm/postgresql-backup-s3
    host: <%= ENV["SERVER_POSTGRES"] %>
    env:
      clear:
        SCHEDULE: '@daily'
        S3_ACCESS_KEY_ID: <%= ENV["BACKUP_STORAGE_KEY"] %>
        S3_SECRET_ACCESS_KEY: <%= ENV["BACKUP_STORAGE_SECRET"] %>
        S3_BUCKET: <%= ENV["BACKUP_BUCKET"] %>
        S3_ENDPOINT: <%= ENV["BACKUP_ENDPOINT"] %>
        S3_PREFIX: <%= ENV["BACKUP_PREFIX"] %>
        POSTGRES_HOST: <%= ENV["POSTGRES_HOST"] %>
        POSTGRES_DATABASE: <%= ENV["BACKUP_DATABASE"] %>
        POSTGRES_USER: <%= ENV["POSTGRES_USERNAME"] %>
        POSTGRES_PASSWORD: <%= ENV["POSTGRES_PASSWORD"] %>
        DELETE_OLDER_THAN: <%= ENV["BACKUP_DELETE_OLDER_THAN"] %>

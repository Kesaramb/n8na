name: Build, unit test and lint branch

on:
  pull_request:
    branches:
      - '**'
      - '!release/*'

# 添加并发控制
concurrency:
  group: ci-pull-requests-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  install-and-build:
    name: Install & Build
    runs-on: ubuntu-latest  # 使用 GitHub 默认运行器
    env:
      NODE_OPTIONS: '--max-old-space-size=4096'
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          ref: refs/pull/${{ github.event.pull_request.number }}/merge
          fetch-depth: 0  # 获取完整历史用于更好的缓存

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          check-latest: true

      - name: Check pnpm
        id: check-pnpm
        run: |
          echo "Installing pnpm..."
          npm install -g pnpm@10.2.1
          pnpm --version

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build

      - name: Run formatcheck
        run: pnpm format:check

      - name: Run typecheck
        run: pnpm typecheck

  unit-test:
    name: Unit tests
    uses: ./.github/workflows/units-tests-reusable.yml
    needs: install-and-build
    with:
      ref: refs/pull/${{ github.event.pull_request.number }}/merge
      cacheKey: ${{ github.sha }}-base:build
      collectCoverage: true

  lint:
    name: Lint
    uses: ./.github/workflows/linting-reusable.yml
    needs: install-and-build
    with:
      ref: refs/pull/${{ github.event.pull_request.number }}/merge
      cacheKey: ${{ github.sha }}-base:build

  notify-on-failure:
    name: Notify Feishu
    runs-on: ubuntu-latest
    needs: [install-and-build, unit-test, lint]
    if: always()
    steps:
      - name: Notify Feishu
        run: |
          if [[ "${{ job.status }}" == "success" ]]; then
            STATUS="✅ 成功"
          elif [[ "${{ job.status }}" == "failure" ]]; then
            STATUS="❌ 失败"
          elif [[ "${{ job.status }}" == "cancelled" ]]; then
            STATUS="⏹️ 已取消"
          else
            STATUS="❓ 未知状态"
          fi
          curl -X POST -H "Content-Type: application/json" \
          -d "{
            \"msg_type\": \"text\",
            \"content\": {
              \"text\": \"CI 分支构建通知\nPR: [${{ github.event.pull_request.title }}](${{ github.event.pull_request.html_url }})\n分支: [${{ github.head_ref }}](${{ github.server_url }}/${{ github.repository }}/tree/${{ github.head_ref }})\n作者: ${{ github.actor }}\n状态: $STATUS\n构建链接: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\"
            }
          }" \
          ${{ secrets.FEISHU_WEBHOOK_URL }}

#!/usr/bin/env node

const path = require('path');

// Make sure that it also find the config folder when it
// did get started from another folder that the root one.
process.env.NODE_CONFIG_DIR = process.env.NODE_CONFIG_DIR || path.join(__dirname, 'config');

// Check if version should be displayed
const versionFlags = ['-v', '-V', '--version'];
if (versionFlags.includes(process.argv.slice(-1)[0])) {
	console.log(require('../package').version);
	process.exit(0);
}

if (process.argv.length === 2) {
	// When no command is given choose by default start
	process.argv.push('start');
}

const nodeVersion = process.versions.node;
const nodeVersionMajor = require('semver').major(nodeVersion);

// Support Node 20.19+ through 24.x
if (nodeVersionMajor < 20 || nodeVersionMajor > 24) {
	console.log(`
	Your Node.js version (${nodeVersion}) is currently not supported by n8n.
	Please use Node.js >=20.19 and <=24.x instead!
	`);
	process.exit(1);
}

// For Node 20, ensure it's at least 20.19
if (nodeVersionMajor === 20) {
	const semver = require('semver');
	if (semver.lt(nodeVersion, '20.19.0')) {
		console.log(`
		Your Node.js version (${nodeVersion}) is currently not supported by n8n.
		Please use Node.js >=20.19 and <=24.x instead!
		`);
		process.exit(1);
	}
}

try {
	require('source-map-support').install();
} catch {}

require('@oclif/command')
	.run()
	.then(require('@oclif/command/flush'))
	.catch(require('@oclif/errors/handle'));
